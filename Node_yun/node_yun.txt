node 可以把路由设计漂亮

res.end() 返回值必须是字符串

===>http模块
创建一个服务器
var server = http.createServer((req, res) => {

});

监听端口
server.listen(3000);

设置响应头
res.writeHead(200, {"Content-type": "text/plain;charset=UTF8"});

路由获取
req.url


===>fs模块

===>url模块

===>path模块

===>querystring模块
 
===>formidable模块 (安装) 处理表单

===>ejs 组合模板引擎

===>express 框架

===>cookie-parser 处理cookie

===>express-session 设置session

===>ga 图片处理

RESThul 路由设计模式。

mongoDB

导入数据
mongoimport -d 表明 -c 集合名 --drop 删除已有数据 <path路径>

安装用brew
启动 mongod --dbpath <path>
使用 mongo
查看所有表 show dbs
使用表或新建 use bdName
删除表  db.dropDatabase()
查看当前使用的表 bd
查看当前集合 show show collections
插入 db.collection.insert()
查询多个条件 db.collection.find({"name": "xx", "age": 13})
查询大于条件 db.collection.find("age": {$gt: 23})
查询后排序 db.collection.find().sort( { "age": 1, "address.zipcode": 1 } )
查询或  db.collection.find({$or: {"name": "xx", "age": "30"}})
修改数据 db.student.update({"name": "小明"}, {$set: {"age": 78}})
修改多个数据 db.student.update({'score.it': 30}, {$set: {'age': 66}}, {'multi': true});
不用$set 会完整替换数据
删除 db.collection.remove({"name": "小明"})
删除一个 db.collection.remove({"age" {$gt: {"age": 30}}, {justOne: true}})
https://docs.mongodb.com/master/reference/method/db.collection.remove/index.html